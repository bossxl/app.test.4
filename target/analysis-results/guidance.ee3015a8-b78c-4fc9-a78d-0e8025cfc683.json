{
  "id": "ee3015a8-b78c-4fc9-a78d-0e8025cfc683",
  "trigger": "02b1a8fd-0c6d-4a0a-b746-70d4e39dfe83",
  "category": "ROUTE",
  "event": {
    "boundParams": [
      "DIGEST_AUTH",
      "FORM_AUTH",
      "fruit",
      "foo",
      "CLIENT_CERT_AUTH",
      "BASIC_AUTH"
    ],
    "allowedParams": [],
    "disallowedParams": [],
    "missingParams": [],
    "initBinder": false,
    "controllerclass": "MappingController",
    "requestHandlerSignatures": [
      "byParameterNegation()",
      "byConsumes(@RequestBody()JavaBean javaBean)",
      "byHeader()",
      "byHeaderNegation()",
      "byProducesJson()",
      "byParameter()",
      "byPath()",
      "byPathPattern(HttpServletRequest request)",
      "byMethod()",
      "byProducesXml()"
    ],
    "category": "ROUTE",
    "id": "02b1a8fd-0c6d-4a0a-b746-70d4e39dfe83"
  },
  "evidence": "# Create a Spring @InitBinder Method\n\nOur analysis determined that the `@InitBinder` method for `MappingController` was not present, resulting in the ability for\nparameters passed on the Request to the `@RequestHandler` to override parameters that may not otherwise be exposed. We\nhave analyzed the the code and found the following parameters to be exposed to the request currently through Spring\u0027s\nauto-binding:\n\n    * DIGEST_AUTH\n    * FORM_AUTH\n    * fruit\n    * foo\n    * CLIENT_CERT_AUTH\n    * BASIC_AUTH\n\nFor additional context, we discovered the following `@RequestHandler` methods in this controller that accept parameters\nfrom the request.\n\n    * `byParameterNegation()`\n    * `byConsumes(@RequestBody()JavaBean javaBean)`\n    * `byHeader()`\n    * `byHeaderNegation()`\n    * `byProducesJson()`\n    * `byParameter()`\n    * `byPath()`\n    * `byPathPattern(HttpServletRequest request)`\n    * `byMethod()`\n    * `byProducesXml()`\n\nUse our sandbox below to fine-tune which parameters you would like to explicitly allow to be set. Anything explicitly\npassed to the `setAllowedFields` method will be _whitelisted_ for inclusion while any parameter that is excluded will\nbe considered a read-only attribute and the value will not be set when Spring performs auto-binding.\n",
  "advice": [
    {
      "sandboxModel": {
        "boundParams": [
          "DIGEST_AUTH",
          "FORM_AUTH",
          "fruit",
          "foo",
          "CLIENT_CERT_AUTH",
          "BASIC_AUTH"
        ]
      },
      "file": "/Users/cschmidt/IdeaProjects/lofting.poc.java.analyzer/test/app.test.4/src/main/java/org/springframework/samples/mvc/mapping/MappingController.java",
      "content": "\n\r    /**\n\r     * Added by Codiscope {{product}} on {{date}}\n\r     *\n\r     * @GuidanceID({{guidance.id}})\n\r     *\n\r     * Whitelist the properties that can be auto-bound to parameters and fields\n\r     **************************************************************************/\n\r    @InitBinder\n\r    public void initBinder(org.springframework.validation.DataBinder dataBinder) {\n\r        dataBinder.setAllowedFields({{#allowedFields}}\"{{field}}\"{{^last}},{{/last}}{{/allowedFields}});\n\r    }\n\r",
      "type": "SandboxAdvice"
    }
  ]
}