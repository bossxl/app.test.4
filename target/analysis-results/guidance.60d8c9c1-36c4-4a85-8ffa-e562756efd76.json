{
  "id": "60d8c9c1-36c4-4a85-8ffa-e562756efd76",
  "trigger": "6ff41a5c-af98-4bf0-a41c-f27c682dfdbe",
  "category": "ROUTE",
  "event": {
    "boundParams": [
      "copyright",
      "THURSDAY",
      "styleSheet",
      "rating",
      "language",
      "foreignMarkup",
      "cloud",
      "WEDNESDAY",
      "docs",
      "SATURDAY",
      "logo",
      "otherLinks",
      "id",
      "info",
      "image",
      "SUNDAY",
      "TUESDAY",
      "encoding",
      "pubDate",
      "modules",
      "skipDays",
      "entries",
      "subtitle",
      "updated",
      "items",
      "authors",
      "skipHours",
      "objBean",
      "lastBuildDate",
      "fruit",
      "foo",
      "FRIDAY",
      "icon",
      "link",
      "DAYS",
      "generator",
      "description",
      "title",
      "serialVersionUID",
      "rights",
      "alternateLinks",
      "categories",
      "managingEditor",
      "ttl",
      "webMaster",
      "uri",
      "textInput",
      "MONDAY",
      "xmlBase",
      "feedType",
      "contributors"
    ],
    "allowedParams": [],
    "disallowedParams": [],
    "missingParams": [],
    "initBinder": false,
    "controllerclass": "MessageConvertersController",
    "requestHandlerSignatures": [
      "writeString()",
      "writeForm()",
      "writeXml()",
      "writeJson()",
      "readString(@RequestBody()String string)",
      "writeFeed()",
      "readJson(@Valid()@RequestBody()JavaBean bean)",
      "readChannel(@RequestBody()Channel channel)",
      "writeChannel()",
      "readForm(@ModelAttribute()JavaBean bean)",
      "readXml(@RequestBody()JavaBean bean)",
      "readFeed(@RequestBody()Feed feed)"
    ],
    "category": "ROUTE",
    "id": "6ff41a5c-af98-4bf0-a41c-f27c682dfdbe"
  },
  "evidence": "# Create a Spring @InitBinder Method\n\nOur analysis determined that the `@InitBinder` method for `MessageConvertersController` was not present, resulting in the ability for\nparameters passed on the Request to the `@RequestHandler` to override parameters that may not otherwise be exposed. We\nhave analyzed the the code and found the following parameters to be exposed to the request currently through Spring\u0027s\nauto-binding:\n\n    * copyright\n    * THURSDAY\n    * styleSheet\n    * rating\n    * language\n    * foreignMarkup\n    * cloud\n    * WEDNESDAY\n    * docs\n    * SATURDAY\n    * logo\n    * otherLinks\n    * id\n    * info\n    * image\n    * SUNDAY\n    * TUESDAY\n    * encoding\n    * pubDate\n    * modules\n    * skipDays\n    * entries\n    * subtitle\n    * updated\n    * items\n    * authors\n    * skipHours\n    * objBean\n    * lastBuildDate\n    * fruit\n    * foo\n    * FRIDAY\n    * icon\n    * link\n    * DAYS\n    * generator\n    * description\n    * title\n    * serialVersionUID\n    * rights\n    * alternateLinks\n    * categories\n    * managingEditor\n    * ttl\n    * webMaster\n    * uri\n    * textInput\n    * MONDAY\n    * xmlBase\n    * feedType\n    * contributors\n\nFor additional context, we discovered the following `@RequestHandler` methods in this controller that accept parameters\nfrom the request.\n\n    * `writeString()`\n    * `writeForm()`\n    * `writeXml()`\n    * `writeJson()`\n    * `readString(@RequestBody()String string)`\n    * `writeFeed()`\n    * `readJson(@Valid()@RequestBody()JavaBean bean)`\n    * `readChannel(@RequestBody()Channel channel)`\n    * `writeChannel()`\n    * `readForm(@ModelAttribute()JavaBean bean)`\n    * `readXml(@RequestBody()JavaBean bean)`\n    * `readFeed(@RequestBody()Feed feed)`\n\nUse our sandbox below to fine-tune which parameters you would like to explicitly allow to be set. Anything explicitly\npassed to the `setAllowedFields` method will be _whitelisted_ for inclusion while any parameter that is excluded will\nbe considered a read-only attribute and the value will not be set when Spring performs auto-binding.\n",
  "advice": [
    {
      "sandboxModel": {
        "boundParams": [
          "copyright",
          "THURSDAY",
          "styleSheet",
          "rating",
          "language",
          "foreignMarkup",
          "cloud",
          "WEDNESDAY",
          "docs",
          "SATURDAY",
          "logo",
          "otherLinks",
          "id",
          "info",
          "image",
          "SUNDAY",
          "TUESDAY",
          "encoding",
          "pubDate",
          "modules",
          "skipDays",
          "entries",
          "subtitle",
          "updated",
          "items",
          "authors",
          "skipHours",
          "objBean",
          "lastBuildDate",
          "fruit",
          "foo",
          "FRIDAY",
          "icon",
          "link",
          "DAYS",
          "generator",
          "description",
          "title",
          "serialVersionUID",
          "rights",
          "alternateLinks",
          "categories",
          "managingEditor",
          "ttl",
          "webMaster",
          "uri",
          "textInput",
          "MONDAY",
          "xmlBase",
          "feedType",
          "contributors"
        ]
      },
      "file": "/Users/cschmidt/IdeaProjects/lofting.poc.java.analyzer/test/app.test.4/src/main/java/org/springframework/samples/mvc/messageconverters/MessageConvertersController.java",
      "content": "\n\r    /**\n\r     * Added by Codiscope {{product}} on {{date}}\n\r     *\n\r     * @GuidanceID({{guidance.id}})\n\r     *\n\r     * Whitelist the properties that can be auto-bound to parameters and fields\n\r     **************************************************************************/\n\r    @InitBinder\n\r    public void initBinder(org.springframework.validation.DataBinder dataBinder) {\n\r        dataBinder.setAllowedFields({{#allowedFields}}\"{{field}}\"{{^last}},{{/last}}{{/allowedFields}});\n\r    }\n\r",
      "type": "SandboxAdvice"
    }
  ]
}